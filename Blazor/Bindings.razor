@using System.Globalization

<div class="form-group">
    <label>City:</label>
    <!--<input class="form-control" value="@City" @onchange="UpdateCity" />--> <!--The "verbose" way to bind an element -->
    <!--<input class="form-control" @bind="City" />--> <!-- The "concise" way to bind an element -->
    <input class="form-control" @bind-value="City" @bind-value:event="oninput" /> <!--The 'concise' way of binding to a different event than the 'change' event-->
</div>

<div class="p-2 mb-2">City Value: @City</div>
<button class="btn btn-primary" @onclick="@(() => City = "Paris")">Paris</button>
<button class="btn btn-primary" @onclick="@(() => City = "Chicago")">Chicago</button>


<div class="form-group mt-2">
    <label>Time:</label>
    <input class="form-control my-1" @bind="Time" @bind:culture="Culture" @bind:format="MMM-dd" />
    <input class="form-control my-1" @bind="Time" @bind:culture="Culture" />
    <input class="form-control" type="date" @bind="Time" />
</div>

<div class="p-2 mb-2">Time Value: @Time</div>

<div class="form-group">
    <label>Culture:</label>
    <select class="form-control" @bind="Culture">
        <option value="@CultureInfo.GetCultureInfo("en-us")">en-US</option>
        <option value="@CultureInfo.GetCultureInfo("en-gb")">en-GB</option>
        <option value="@CultureInfo.GetCultureInfo("fr-fr")">fr-FR</option>
    </select>
</div>

@code {
    public string City { get; set; } = "London";

    #region The "verbose" way to bind an element
    //public void UpdateCity(ChangeEventArgs e)
    //{
    //    City = e.Value as string;
    //}
    #endregion

    public DateTime Time { get; set; } = DateTime.Parse("2050/01/20 09:50");
    public CultureInfo Culture { get; set; } = CultureInfo.GetCultureInfo("en-us");
}

